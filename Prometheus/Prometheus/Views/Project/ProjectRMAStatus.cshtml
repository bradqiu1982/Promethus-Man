@model IEnumerable<Prometheus.Models.IssueViewModels>

@{
    ViewBag.Title = "ProjectRMAStatus";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-3">
        <h2>Project RMA Status</h2>
    </div>
    <div class="col-md-2">
        <h2><a data-toggle="tooltip" title="Goto ViewAll" href="/Project/ViewAll"><span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span></a></h2>
    </div>
    <div class="col-md-7"></div>
</div>

<hr />

@if (Model != null)
{
    var i = 0;
    <table id="firsttable" name="firsttable" class="table table-bordered table-hover">
        <thead class="header">
            <tr>
                <th width="10%">RMA#</th>
                <th width="10%">SN</th>
                <th width="10%">RootCause</th>
                <th width="10%">RMA Failure Code</th>
                <th width="10%">Containment Action</th>
                <th width="10%">Corrective Action</th>
                <th width="10%">Internal Report</th>
                <th width="10%">Customer Report</th>
                <th width="10%">Owner</th>
                <th width="10%">Report Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var rmatitle = item.Summary.Split(new string[] { "from" },StringSplitOptions.None)[1].Trim();

                <tr>
                    <td width="10%">@(Model.Count() - i)</td>
                    <td colspan="9" width="90%">
                        <a href="/Issue/UpdateIssue?issuekey=@item.IssueKey">
                            <span class="glyphicon glyphicon-home" aria-hidden="true"></span>
                            @rmatitle.Substring(0,rmatitle.Length>125?125:rmatitle.Length)
                            </a>
                    </td>
                </tr>
                <tr>
                    <td width="10%">@item.FinisarRMA</td>
                    <td width="10%">@item.ModuleSN</td>
                    @if (item.RootCauseCommentList.Count > 0)
                    {
                        <td width="10%"><a href="/Issue/ShowRootCause?issuekey=@(item.IssueKey)" target="_blank">@Html.Raw(@Prometheus.Models.Resolute.ColorStatus(Prometheus.Models.Resolute.Done))</a></td>
                    }
                    else
                    {
                        <td width="10%">@Html.Raw(@Prometheus.Models.Resolute.ColorStatus(Prometheus.Models.Resolute.Pending))</td>
                    }

                    <td width="10%">@item.RMAFailureCode</td>
                    
                    @if (item.ContainmentActions.Count > 0)
                    {
                        <td width="10%"><a href="/Issue/ShowContainmentAction?issuekey=@(item.IssueKey)" target="_blank">@Html.Raw(item.ContainmentActionStatus())</a></td>
                    }
                    else
                    {
                        <td width="10%">N/A</td>
                    }
                    
                    @if (item.CorrectiveActions.Count > 0)
                    {
                        <td width="10%"><a href="/Issue/ShowCorrectiveAction?issuekey=@(item.IssueKey)" target="_blank">@Html.Raw(item.CorrectiveActionStatus())</a></td>
                    }
                    else
                    {
                        <td width="10%">N/A</td>
                    }

                    @if (item.InternalReportCommentList.Count > 0)
                    {
                        if (item.InternalReportCommentList[item.InternalReportCommentList.Count - 1].Comment.Contains("<a href"))
                        {
                            var originalstr = System.Text.RegularExpressions.Regex.Replace(
                                                        item.InternalReportCommentList[item.InternalReportCommentList.Count - 1].Comment, "<.*?>", string.Empty);
                            var newcomment = item.InternalReportCommentList[item.InternalReportCommentList.Count - 1].Comment.Replace(originalstr
                                , Prometheus.Models.Resolute.ColorStatus(Prometheus.Models.Resolute.Done));
                                <td width="10%">@Html.Raw(newcomment)</td>
                        }
                        else
                        {
                            <td width="10%"><p><a href="@item.InternalReportCommentList[item.InternalReportCommentList.Count - 1].Comment" target="_blank">@Html.Raw(Prometheus.Models.Resolute.ColorStatus(Prometheus.Models.Resolute.Done))</a></p></td>
                        }

                    }
                    else
                    {
                        <td width="10%">@Html.Raw(@Prometheus.Models.Resolute.ColorStatus(Prometheus.Models.Resolute.Pending))</td>
                    }
                    
                    @if (item.Report4CustomerCommentList.Count > 0)
                    {
                        if (item.Report4CustomerCommentList[item.Report4CustomerCommentList.Count - 1].Comment.Contains("<a href"))
                        {
                            var originalstr = System.Text.RegularExpressions.Regex.Replace(
                                item.Report4CustomerCommentList[item.Report4CustomerCommentList.Count - 1].Comment, "<.*?>", string.Empty);
                            var newcomment = item.Report4CustomerCommentList[item.Report4CustomerCommentList.Count - 1].Comment.Replace(originalstr
                                , Prometheus.Models.Resolute.ColorStatus(Prometheus.Models.Resolute.Done));

                            <td width="10%">@Html.Raw(newcomment)</td>
                        }
                        else
                        {
                            <td width="10%"><p><a href="@item.Report4CustomerCommentList[item.Report4CustomerCommentList.Count - 1].Comment" target="_blank">@Html.Raw(Prometheus.Models.Resolute.ColorStatus(Prometheus.Models.Resolute.Done))</a></p></td>
                        }
                    }
                    else
                    {
                        <td width="10%">@Html.Raw(@Prometheus.Models.Resolute.ColorStatus(Prometheus.Models.Resolute.Pending))</td>
                    }

                    <td width="10%">@item.Assignee.Split(new string[] { "@"},StringSplitOptions.None)[0]</td>
                    <td width="10%">@item.ReportDate.ToString("MM/dd-yy")</td>
                </tr>
                i = i + 1;
            }
        </tbody>
    </table>
    <script type="text/javascript">
    $(document).ready(function () {
        var offset = $('.navbar').height();
        $("#firsttable").stickyTableHeaders({ fixedOffset: offset });
        });
    </script>
}
