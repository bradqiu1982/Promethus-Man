@model Prometheus.Models.IssueViewModels

@{
    ViewBag.Title = "CreateIssue";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Issue</h2>

@Html.Raw(string.IsNullOrEmpty(ViewBag.CreateError) ? "&nbsp;" : ViewBag.CreateError)
@if (!string.IsNullOrEmpty(ViewBag.CreateError))
{
    ViewBag.CreateError = "";
}

<hr/>

<script src="../../ckeditor/ckeditor.js"></script>

@using (Html.BeginForm("CreateIssue", "Issue", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">

        <div class="form-horizontal">

            <div class="form-group">
                <div class="col-md-6">
                    <label class="control-label col-md-2" for="ProjectName">Project<font color="red">*</font></label>
                    <div class="col-md-10">
                        @Html.DropDownList("projectlist", null, new { @id = "ProjectKey", @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-6">
                    <label class="control-label col-md-2" for="IssueType">IssueType<font color="red">*</font></label>
                    <div class="col-md-10">
                        @Html.DropDownList("issuetypelist", null, new { @id = "IssueType", @class = "form-control" })                   
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    <label class="control-label col-md-2" for="Summary">Summary<font color="red">*</font></label>
                    <div class="col-md-10">
                        @if (Model != null && !string.IsNullOrEmpty(Model.Summary))
                        {
                            <input class="form-control text-box single-line" value="@Model.Summary" data-val="true" data-val-length="The field must be a string with a minimum length of 2 and a maximum length of 180." data-val-length-max="180" data-val-length-min="2" data-val-regex="The field should not contain \'" data-val-regex-pattern="^(?!.*&#39;).*$" data-val-required="The field is required." id="Summary" name="Summary" type="text" />
                        }
                        else
                        {
                            <input class="form-control text-box single-line" data-val="true" data-val-length="The field must be a string with a minimum length of 2 and a maximum length of 180." data-val-length-max="180" data-val-length-min="2" data-val-regex="The field should not contain \'" data-val-regex-pattern="^(?!.*&#39;).*$" data-val-required="The field is required." id="Summary" name="Summary" type="text" value="" />
                        }

                        <span class="field-validation-valid text-danger" data-valmsg-for="Summary" data-valmsg-replace="true"></span>
                    </div>

                </div>

                <div class="col-md-6">
                    <label class="control-label col-md-2" for="IssueType">Status<font color="red">*</font></label>
                    <div class="col-md-10">
                        @Html.DropDownList("resolutionlist", null, new { @id = "Resolution", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    <label class="control-label col-md-2" for="IssueType">Priority</label>
                    <div class="col-md-10">
                        @Html.DropDownList("prioritylist", null, new { @id = "Priority", @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-6">
                    <label class="control-label col-md-2" for="Assignee">Assignee</label>
                    <div class="col-md-10">
                        @Html.DropDownList("assigneelist", null, new { @id = "Assignee", @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="form-group">

                @*<div class="col-md-6">
                    <label class="control-label col-md-2" for="Reporter">Reporter<font color="red">*</font></label>
                    <div class="col-md-10">
                        @Html.DropDownList("reporterlist", null, new { @id = "Reporter", @class = "form-control" })
                    </div>
                </div>*@
                <div class="col-md-6">
                    <label class="control-label col-md-2" for="DueDate">DueDate<font color="red">*</font></label>
                    <div class="col-md-10">
                        @if (Model != null && string.Compare(Model.DueDate.ToString("yyyy-MM-dd"),"0001-01-01") != 0)
                        {
                            <input class="form-control text-box single-line" value="@Model.DueDate.ToString("yyyy-MM-dd")" data-val="true" data-val-required="The DueDate field is required." id="DueDate" name="DueDate" type="text" />
                        }
                        else
                        {
                            <input class="form-control text-box single-line" data-val="true"  data-val-required="The DueDate field is required." id="DueDate" name="DueDate" type="text" value="" />
                        }
                        <span class="field-validation-valid text-danger" data-valmsg-for="DueDate" data-valmsg-replace="true"></span>
                    </div>

                </div>
                <div class="col-md-6"></div>

            <script type="text/javascript">
                $(document).ready(function () {
                    $("#DueDate").datepicker({
                        changeMonth: true,
                        changeYear: true,
                        dateFormat: 'yy-mm-dd'
                    });
                });
            </script>
</div>



            <hr />

            <div class="col-md-12">
                <div class="form-group">
                    <label>Related People Email</label>
                </div>

                <div class="form-group">
                    <div class="col-md-12" data-toggle="tooltip" data-placement="center" title="Exampel: Email Address; Email Address;Email Address;...">
                        @if (Model != null && !string.IsNullOrEmpty(Model.RelativePeoples))
                        {
                            <textarea class="form-control" name="RPeopleAddr" id="RPeopleAddr" style="min-width: 100%;min-height:60px;overflow-y: scroll;overflow-x: scroll;" data-val="true" data-val-length="The field must be a string with a minimum length of 6 and a maximum length of 200." data-val-length-max="200" data-val-length-min="6" data-val-regex="The field should not contain \'" data-val-regex-pattern="^(?!.*&#39;).*$">@Model.RelativePeoples</textarea>
                        }
                        else
                        {
                            <textarea class="form-control" name="RPeopleAddr" id="RPeopleAddr" style="min-width: 100%;min-height:60px;overflow-y: scroll;overflow-x: scroll;" data-val="true" data-val-length="The field must be a string with a minimum length of 6 and a maximum length of 200." data-val-length-max="200" data-val-length-min="6" data-val-regex="The field should not contain \'" data-val-regex-pattern="^(?!.*&#39;).*$"></textarea>
                        }
                    </div>
                    <span class="field-validation-valid text-danger" data-valmsg-for="RPeopleAddr" data-valmsg-replace="true"></span>
                </div>
            </div>

            <hr />

            <div class="form-group">
                <div class="col-md-12">
                    <div class="col-md-4">
                        <span class="btn btn-default btn-file" id="choosefile3">
                            Attachment <input type="file" name="files3" id="file3" runat="server" onchange="ShowFileNames3(this)" />
                        </span>
                    </div>
                    <div class="col-md-8">
                        <div class="col-md-11">
                            <label class="control-label" id="showfile3" name="showfile3"></label>
                        </div>
                        <div class="col-md-1">
                            <input class="form-control text-box single-line" value="" id="attachmentupload" name="attachmentupload" type="hidden" />
                        </div>
                    </div>
                </div>
                <script type="text/javascript">
                function ShowFileNames3(oFile) {
                    $('#showfile3').text(oFile.value);
                    document.getElementById("attachmentupload").value = oFile.value;
                }
                </script>
            </div>

        </div>



        <hr />

        <div class="col-md-12">
            <div class="form-group">
                <label class="control-label">Description<font color="red">*</font></label>
            </div>

            <div class="form-group">
                <div>
                    @if (Model != null && !string.IsNullOrEmpty(Model.Description))
                    {
                        <textarea name="editor1" id="editor1" rows="10" cols="80">@(Model.Description)</textarea>
                    }
                    else
                    {
                        <textarea name="editor1" id="editor1" rows="10" cols="80"></textarea>
                    }
                    <script>
                        CKEDITOR.replace('editor1', { htmlEncodeOutput: true, filebrowserImageUploadUrl: '/userfiles/Upload.ashx' });
                    </script>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>

    </div>



}
